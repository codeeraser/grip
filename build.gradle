apply plugin: 'groovy'
apply plugin: 'application'
version = '0.1'
mainClassName = 'Ratpack'

repositories {
    repositories {
        maven  {
            url "http://repo1.maven.org/maven2"
        }
    }
}

configurations {
    ivy
    all*.exclude group: 'xml-apis'
    all*.exclude group: 'xerces'
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.8'
    compile 'commons-cli:commons-cli:1.2'
    compile 'org.reflections:reflections:0.9.9-RC1'
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile group: 'org.hsqldb', name: 'hsqldb', version: '2.3.2'
    compile 'javax.mail:mail:1.4'
    compile 'org.apache.poi:poi:3.11'
    compile 'org.quartz-scheduler:quartz:2.2.1'
    compile 'org.apache.poi:poi:3.11'
    compile 'org.codehaus.gpars:gpars:1.2.1'
    compile "org.apache.ivy:ivy:2.4.0"
    compile "org.apache.ant:ant-jsch:1.8.4"
    compile "ch.qos.logback:logback-classic:1.1.3"
    compile "ch.qos.logback:logback-core:1.1.3"
    compile "ch.qos.logback:logback-access:1.1.3"
    compile "com.opencsv:opencsv:3.5"
    compile "org.asciidoctor:asciidoctorj:1.5.2"
    compile "com.craigburke.document:pdf:0.4.6"
    compile "com.craigburke.document:word:0.4.6"
    compile "javax.servlet:javax.servlet-api:3.0.1"
    ivy "org.apache.ivy:ivy:2.4.0"
    testCompile 'junit:junit:4.12'
    testCompile "org.spockframework:spock-core:1.1-groovy-2.4-rc-3"
}

apply plugin: "io.ratpack.ratpack-groovy"
apply plugin: "com.github.johnrengelman.shadow"

tasks.withType(JavaExec) {
    // Assign all Java system properties from
    // the command line to the JavaExec task.
    systemProperties System.properties
}

tasks.withType(GroovyCompile) {
    groovyClasspath += configurations.ivy
}

task uberjar(type: Jar, dependsOn: [':compileJava', ':compileGroovy']) {
    uberjar.dependsOn(test)
    from files(sourceSets.main.output.resourcesDir)
    from files(sourceSets.main.output.classesDir) //needed for reflections-api
    from files(sourceSets.main.allSource)
    from configurations.runtime.asFileTree.files.collect { zipTree(it) }

    manifest {
        attributes 'Main-Class': mainClassName
    }
}

sourceSets.main.resources.srcDirs 'src/main/groovy'
sourceSets.test.resources.srcDirs 'src/test/groovy'

test {
    include 'de/metacode/grip/**'
    testLogging.showStandardStreams = true

    beforeTest { descriptor ->
        logger.lifecycle("Running test: $descriptor.className")
    }

    testLogging {
        // Show that tests are run in the command-line output
        events 'started', 'passed'
    }
}


buildscript {
    repositories {
        maven { url "http://oss.jfrog.org/artifactory/repo" }
        jcenter()
    }
    dependencies {
        classpath "io.ratpack:ratpack-gradle:1.4.4"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
    }
}

apply plugin: 'idea'

idea {
    project {
        jdkName "1.8"
        languageLevel = '1.8'

        modules.each { m ->
            m.downloadSources = true

            if (rootProject.subprojects.find { s -> m.name == s.name }) {
                // use same output dirs as gradle
                m.inheritOutputDirs = false
                File bd = new File(m.contentRoot, "build");
                m.outputDir = new File(bd, "classes/main")
                m.testOutputDir = new File(bd, "classes/test")
            }
        }
    }
}